name: Auto Approve Dependency PRs
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Shallow Clone of Repo      
        run: |
          git clone --no-checkout https://${{ github.actor }}:${{ secrets.AUTO_APPROVE_TOKEN }}@github.com/${{ github.repository }}.git .
      - name: Debug
        run: |
          gh auth status
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_APPROVE_TOKEN }}
      - name: Find dependency PRs
        run: |
          echo $(gh pr list --repo "alteryx/woodwork" --author "machineFL" --base main --state open --search "status:success review:required" --limit 1 --json url)
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_APPROVE_TOKEN }}
      - name: Find dependency PRs
        id: find_prs
        run: |
          echo $(gh pr list --repo "alteryx/woodwork" --author "machineFL" --base main --state open --search "status:success review:required" --limit 1)
          gh pr list --author "machineFL" --base main --state open --search "status:success review:required" --limit 1 --json url > dep_PRs_waiting_approval.json
          echo "dep_pull_request_url=$(cat dep_PRs_waiting_approval.json | grep -Eo "(https)://[a-zA-Z0-9./?=_%:-]*")" >> $GITHUB_ENV
          echo "${{ env.dep_pull_request_url }}"
          if [[ "${{ env.dep_pull_request_url }}" -gt 8 ]]; then
            echo ::set-output name=dep_pull_request_url::${dep_pull_request_url}
          else 
            echo No matching PR found;
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_APPROVE_TOKEN }}
      - name: Approve dependency PRs and enable auto-merge 
        if: steps.find_prs.outputs.dep_pull_request_url && steps.find_prs.outputs.dep_pull_request_url != null
        run: |
          gh pr review ${{ steps.find_prs.outputs.dep_pull_request_url }} --approve --comment --body "auto approve"
          gh pr merge ${{ steps.find_prs.outputs.dep_pull_request_url }} --auto --squash
          rm dep_PRs_waiting_approval.json
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_APPROVE_TOKEN }}
