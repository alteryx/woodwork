on: push

name: Tests
jobs:
  release_notes_updated:
    name: release notes updated
    runs-on: ubuntu-latest
    steps:
      - name: Check for development branch
        id: branch
        shell: python
        run: |
          from os.path import basename
          from re import compile
          main = '^main$'
          release = '^v\d+\.\d+\.\d+$'
          dep_update = '^dep-update-[a-f0-9]{7}$'
          regex = main, release, dep_update
          patterns = list(map(compile, regex))
          ref = basename("${{ github.event.ref }}")
          is_dev = not any(pattern.match(ref) for pattern in patterns)
          print('::set-output name=is_dev::' + str(is_dev))
      - name: Install package for requests
        run: python -m pip install requests
      - name: Check for pull request number
        id: pull_request
        shell: python
        run: |
          from requests import get
          url = "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/pulls"
          headers = {'Accept': 'application/vnd.github.groot-preview+json'}
          response = get(url=url, headers=headers)
          info = "%s (%s)" % (response.reason, response.status_code)
          assert response.status_code == 200, info
          json = response.json()
          number = str(json[0]['number'] if json else None)
          print('::set-output name=number::' + number)
      - if: ${{ steps.branch.outputs.is_dev == 'True' }}
        name: Checkout repository
        uses: actions/checkout@v2
      - if: ${{ steps.branch.outputs.is_dev == 'True' }}
        name: Check if release notes were updated
        run: cat docs/source/release_notes.rst | grep ":pr:\`${{ steps.pull_request.outputs.number }}\`"